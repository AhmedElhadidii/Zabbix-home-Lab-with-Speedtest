version: '3.8'
services:
  zabbix-server:
    extends:
      file: compose_zabbix_components.yaml
      service: server-pgsql
    image: "${ZABBIX_SERVER_PGSQL_IMAGE}:${ZABBIX_UBUNTU_IMAGE_TAG}${ZABBIX_IMAGE_TAG_POSTFIX}"
    depends_on:
      - postgres-server
    labels:
      com.zabbix.os: "${UBUNTU_OS_TAG}"

  zabbix-proxy-sqlite3:
    extends:
      file: compose_zabbix_components.yaml
      service: proxy-sqlite3
    image: "${ZABBIX_PROXY_SQLITE3_IMAGE}:${ZABBIX_UBUNTU_IMAGE_TAG}${ZABBIX_IMAGE_TAG_POSTFIX}"
    labels:
      com.zabbix.os: "${UBUNTU_OS_TAG}"

  zabbix-proxy-mysql:
    extends:
      file: compose_zabbix_components.yaml
      service: proxy-mysql
    image: "${ZABBIX_PROXY_MYSQL_IMAGE}:${ZABBIX_UBUNTU_IMAGE_TAG}${ZABBIX_IMAGE_TAG_POSTFIX}"
    depends_on:
      - mysql-server
    labels:
      com.zabbix.os: "${UBUNTU_OS_TAG}"

  zabbix-web-apache-pgsql:
    extends:
      file: compose_zabbix_components.yaml
      service: web-apache-pgsql
    image: "${ZABBIX_WEB_APACHE_PGSQL_IMAGE}:${ZABBIX_UBUNTU_IMAGE_TAG}${ZABBIX_IMAGE_TAG_POSTFIX}"
    depends_on:
      - postgres-server
    labels:
      com.zabbix.os: "${UBUNTU_OS_TAG}"

  zabbix-web-nginx-pgsql:
    extends:
      file: compose_zabbix_components.yaml
      service: web-nginx-pgsql
    image: "${ZABBIX_WEB_NGINX_PGSQL_IMAGE}:${ZABBIX_UBUNTU_IMAGE_TAG}${ZABBIX_IMAGE_TAG_POSTFIX}"
    volumes:
      - "./webconf:/local/conf/"
      - "./webconf:/usr/share/zabbix/local/conf/"

    depends_on:
      - postgres-server
    labels:
      com.zabbix.os: "${UBUNTU_OS_TAG}"

  zabbix-java-gateway:
    extends:
      file: compose_zabbix_components.yaml
      service: java-gateway
    image: "${ZABBIX_JAVA_GATEWAY_IMAGE}:${ZABBIX_UBUNTU_IMAGE_TAG}${ZABBIX_IMAGE_TAG_POSTFIX}"
    labels:
      com.zabbix.os: "${UBUNTU_OS_TAG}"

  zabbix-snmptraps:
    extends:
      file: compose_zabbix_components.yaml
      service: snmptraps
    image: "${ZABBIX_SNMPTRAPS_IMAGE}:${ZABBIX_UBUNTU_IMAGE_TAG}${ZABBIX_IMAGE_TAG_POSTFIX}"
    labels:
      com.zabbix.os: "${UBUNTU_OS_TAG}"

  zabbix-web-service:
    extends:
      file: compose_zabbix_components.yaml
      service: web-service
    image: "${ZABBIX_WEB_SERVICE_IMAGE}:${ZABBIX_UBUNTU_IMAGE_TAG}${ZABBIX_IMAGE_TAG_POSTFIX}"
    labels:
      com.zabbix.os: "${UBUNTU_OS_TAG}"

  mysql-server:
    extends:
      file: compose_databases.yaml
      service: mysql-server

  postgres-server:
    extends:
      file: compose_databases.yaml
      service: postgres-server

  db-data-mysql:
    extends:
      file: compose_databases.yaml
      service: db-data-mysql

  db-data-pgsql:
    extends:
      file: compose_databases.yaml
      service: db-data-pgsql

  speedtest:
    image: pschmitt/speedtest:cron
    volumes:
      - "./data/speedtest:/data"
    environment:
      - INTERVAL=300
    networks:
      - zbx_net_backend
      - bridge

  zabbix-agent:
    image: pschmitt/zabbix-agent2:latest
    user: root
    restart: unless-stopped
    hostname: zabbix-speed-agent
    # Avoid privileged mode if possible
    privileged: true 
    # Use the defined networks instead of host network
    networks:
      - zbx_net_backend
      - bridge
    pid: host
    volumes:
      - "./config/bin:/zabbix/bin"
      - "./config/zabbix_agentd.d:/etc/zabbix/zabbix_agentd.d:ro"
      - "./data/speedtest:/data/speedtest"
    environment:
      - ZBX_HOSTNAMEITEM=system.hostname
      # Make sure ZBX_SERVER_HOST points to your zabbix server container
      - ZBX_SERVER_HOST=zabbix-server

# comment
networks:
  zbx_net_frontend:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "${FRONTEND_ENABLE_IPV6}"
    ipam:
      driver: "${FRONTEND_NETWORK_DRIVER}"
      config:
        - subnet: "${FRONTEND_SUBNET}"
  zbx_net_backend:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "${BACKEND_ENABLE_IPV6}"
    internal: true
    ipam:
      driver: "${BACKEND_NETWORK_DRIVER}"
      config:
        - subnet: "${BACKEND_SUBNET}"
  zbx_net_database:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "${DATABASE_NETWORK_ENABLE_IPV6}"
    internal: true
    ipam:
      driver: "${DATABASE_NETWORK_DRIVER}"
  networks:
  bridge: 
    driver: bridge

volumes:
  snmptraps:
#  dbsocket:

secrets:
  MYSQL_USER:
    file: ${ENV_VARS_DIRECTORY}/.MYSQL_USER
  MYSQL_PASSWORD:
    file: ${ENV_VARS_DIRECTORY}/.MYSQL_PASSWORD
  MYSQL_ROOT_USER:
    file: ${ENV_VARS_DIRECTORY}/.MYSQL_ROOT_USER
  MYSQL_ROOT_PASSWORD:
    file: ${ENV_VARS_DIRECTORY}/.MYSQL_ROOT_PASSWORD
  POSTGRES_USER:
    file: ${ENV_VARS_DIRECTORY}/.POSTGRES_USER
  POSTGRES_PASSWORD:
    file: ${ENV_VARS_DIRECTORY}/.POSTGRES_PASSWORD
